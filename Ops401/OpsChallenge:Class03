#!/bin/python

# Script: Ops Challenge: Class 03 - Uptime Sensor Tool Part 2 of 2
# Purpose: Ask user for target IP address then proceed to ping the target while printing a timestamp and success or failure message to the console and writing it to a log file.
# Why: Learn how to automate a script to check uptime of a certain endpoint and automate sending an email to the admin.

import os
import time
import smtplib
from email.message import EmailMessage

# User input for email address and password
email_address = input("Enter your email address: ")
email_password = input("Enter your email password: ")


# Email message details
sender_email = email_address
receiver_email = "qfxhqkwdxfgbarqegb@bbitf.com"
email_subject = "Uptime status changed"

destination_ip = input("Enter the target IP address to ping: ")
status = ""
counter = 0

with open("ping_log.txt", "w") as file:
    while True:
        response = os.system(f"ping -c 1 {destination_ip} > /dev/null 2>&1")
        if response == 0:
            new_status = "up"
        else:
            new_status = "down"

        if new_status != status:
            # Send email notification if status has changed
            message = EmailMessage()
            message['From'] = sender_email
            message['To'] = receiver_email
            message['Subject'] = email_subject
            message_body = f"The status of {destination_ip} has changed from {status} to {new_status} at {time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())}"
            message.set_content(message_body)

            with smtplib.SMTP_SSL('smtp.gmail.com', 465) as server:
                server.login(email_address, email_password)
                server.send_message(message)

        timestamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())
        log_entry = f"{timestamp} Network {new_status} to {destination_ip}"
        print(log_entry)
        file.write(log_entry + "\n")

        status = new_status
        time.sleep(2)
